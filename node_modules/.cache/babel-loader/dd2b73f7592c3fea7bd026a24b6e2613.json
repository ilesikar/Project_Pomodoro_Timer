{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilesi\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport PomodoroTimer from \"./PomodoroTimer.js\";\nimport PomodoroSettings from \"./PomodoroSettings\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [pomodoro, setPomodoro] = useState({\n    focus: 1,\n    break: 1,\n    time: 1\n  });\n  const [onFocus, setOnFocus] = useState(true);\n\n  const updatePomodoro = type => {\n    if (type === \"decrease-focus\") {\n      console.log(type);\n      const newTime = Math.max(pomodoro.focus - 1, 1);\n      setPomodoro({ ...pomodoro,\n        focus: newTime,\n        time: newTime\n      });\n    }\n\n    if (type === \"increase-focus\") {\n      console.log(type);\n      const newTime = Math.min(pomodoro.focus + 1, 3600);\n      setPomodoro({ ...pomodoro,\n        focus: newTime,\n        time: newTime\n      });\n    }\n\n    if (type === \"decrease-break\") {\n      console.log(type);\n      const newTime = Math.max(pomodoro.break - 1, 1);\n      setPomodoro({ ...pomodoro,\n        focus: newTime,\n        time: newTime\n      });\n    }\n\n    if (type === \"increase-break\") {\n      console.log(type);\n      const newTime = Math.min(pomodoro.break + 1, 900);\n      setPomodoro({ ...pomodoro,\n        focus: newTime,\n        time: newTime\n      });\n    }\n  };\n\n  useInterval(() => {\n    const nextSecond = pomodoro.time - 1;\n\n    if (nextSecond === 0) {\n      if (onFocus) {\n        setPomodoro({ ...pomodoro,\n          time: pomodoro.break\n        });\n      }\n\n      {\n        setPomodoro({ ...pomodoro,\n          time: pomodoro.focus\n        });\n      }\n      setOnFocus(!onFocus);\n      i;\n    }\n\n    setPomodoro({ ...pomodoro,\n      time: nextSecond\n    });\n    console.log(nextSecond);\n    console.log(pomodoro);\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PomodoroSettings, {\n    pomodoro: pomodoro,\n    playPause: playPause,\n    isTimerRunning: isTimerRunning,\n    updatePomodoro: updatePomodoro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PomodoroTimer, {\n    pomodoro: pomodoro,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/ilesi/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","PomodoroTimer","PomodoroSettings","Pomodoro","isTimerRunning","setIsTimerRunning","pomodoro","setPomodoro","focus","break","time","onFocus","setOnFocus","updatePomodoro","type","console","log","newTime","Math","max","min","nextSecond","i","playPause","prevState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,SAASC,QAAT,GAAoB;AAClB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AAACU,IAAAA,KAAK,EAAE,CAAR;AAAWC,IAAAA,KAAK,EAAE,CAAlB;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GAAD,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;;AAGA,QAAMe,cAAc,GAAIC,IAAD,IAAU;AAC/B,QAAIA,IAAI,KAAK,gBAAb,EAA+B;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAMG,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASb,QAAQ,CAACE,KAAT,GAAiB,CAA1B,EAA6B,CAA7B,CAAhB;AACAD,MAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcE,QAAAA,KAAK,EAAES,OAArB;AAA8BP,QAAAA,IAAI,EAAEO;AAApC,OAAD,CAAX;AACD;;AACD,QAAIH,IAAI,KAAK,gBAAb,EAA+B;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAMG,OAAO,GAAGC,IAAI,CAACE,GAAL,CAASd,QAAQ,CAACE,KAAT,GAAiB,CAA1B,EAA6B,IAA7B,CAAhB;AACAD,MAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcE,QAAAA,KAAK,EAAES,OAArB;AAA8BP,QAAAA,IAAI,EAAEO;AAApC,OAAD,CAAX;AACD;;AACD,QAAIH,IAAI,KAAK,gBAAb,EAA+B;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAMG,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASb,QAAQ,CAACG,KAAT,GAAiB,CAA1B,EAA6B,CAA7B,CAAhB;AACAF,MAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcE,QAAAA,KAAK,EAAES,OAArB;AAA8BP,QAAAA,IAAI,EAAEO;AAApC,OAAD,CAAX;AACD;;AACD,QAAIH,IAAI,KAAK,gBAAb,EAA+B;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAMG,OAAO,GAAGC,IAAI,CAACE,GAAL,CAASd,QAAQ,CAACG,KAAT,GAAiB,CAA1B,EAA6B,GAA7B,CAAhB;AACAF,MAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcE,QAAAA,KAAK,EAAES,OAArB;AAA8BP,QAAAA,IAAI,EAAEO;AAApC,OAAD,CAAX;AACD;AACF,GArBD;;AAuBAjB,EAAAA,WAAW,CACT,MAAM;AACJ,UAAMqB,UAAU,GAAGf,QAAQ,CAACI,IAAT,GAAgB,CAAnC;;AACA,QAAIW,UAAU,KAAK,CAAnB,EAAsB;AACpB,UAAIV,OAAJ,EAAa;AACXJ,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcI,UAAAA,IAAI,EAAEJ,QAAQ,CAACG;AAA7B,SAAD,CAAX;AACD;;AAAC;AACAF,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcI,UAAAA,IAAI,EAAEJ,QAAQ,CAACE;AAA7B,SAAD,CAAX;AACD;AACDI,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACAW,MAAAA,CAAC;AACF;;AACDf,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcI,MAAAA,IAAI,EAAEW;AAApB,KAAD,CAAX;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYK,UAAZ;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACD,GAfQ,EAgBTF,cAAc,GAAG,IAAH,GAAU,IAhBf,CAAX;;AAmBA,WAASmB,SAAT,GAAqB;AACnBlB,IAAAA,iBAAiB,CAAEmB,SAAD,IAAe,CAACA,SAAjB,CAAjB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AACE,IAAA,QAAQ,EAAElB,QADZ;AACsB,IAAA,SAAS,EAAEiB,SADjC;AAEE,IAAA,cAAc,EAAEnB,cAFlB;AAEkC,IAAA,cAAc,EAAES,cAFlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAEP,QAAzB;AAAmC,IAAA,cAAc,EAAEF,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD;;AAED,eAAeD,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport PomodoroTimer from \"./PomodoroTimer.js\"\nimport PomodoroSettings from \"./PomodoroSettings\"\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [pomodoro, setPomodoro] = useState({focus: 1, break: 1, time: 1});\n  const [onFocus, setOnFocus] = useState(true);\n  \n\n  const updatePomodoro = (type) => {\n    if (type === \"decrease-focus\") {\n      console.log(type);\n      const newTime = Math.max(pomodoro.focus - 1, 1);\n      setPomodoro({...pomodoro, focus: newTime, time: newTime})\n    }\n    if (type === \"increase-focus\") {\n      console.log(type);\n      const newTime = Math.min(pomodoro.focus + 1, 3600);\n      setPomodoro({...pomodoro, focus: newTime, time: newTime})\n    }\n    if (type === \"decrease-break\") {\n      console.log(type);\n      const newTime = Math.max(pomodoro.break - 1, 1);\n      setPomodoro({...pomodoro, focus: newTime, time: newTime})\n    }\n    if (type === \"increase-break\") {\n      console.log(type);\n      const newTime = Math.min(pomodoro.break + 1, 900);\n      setPomodoro({...pomodoro, focus: newTime, time: newTime})\n    }\n  }\n\n  useInterval(\n    () => {\n      const nextSecond = pomodoro.time - 1;\n      if (nextSecond === 0) {\n        if (onFocus) {\n          setPomodoro({...pomodoro, time: pomodoro.break});\n        } {\n          setPomodoro({...pomodoro, time: pomodoro.focus});\n        }\n        setOnFocus(!onFocus);\n        i\n      }\n      setPomodoro({...pomodoro, time: nextSecond});\n      console.log(nextSecond);\n      console.log(pomodoro);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <PomodoroSettings\n        pomodoro={pomodoro} playPause={playPause}\n        isTimerRunning={isTimerRunning} updatePomodoro={updatePomodoro}\n      />\n      <PomodoroTimer pomodoro={pomodoro} isTimerRunning={isTimerRunning}/>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}